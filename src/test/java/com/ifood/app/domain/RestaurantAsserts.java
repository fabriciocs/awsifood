package com.ifood.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RestaurantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestaurantAllPropertiesEquals(Restaurant expected, Restaurant actual) {
        assertRestaurantAutoGeneratedPropertiesEquals(expected, actual);
        assertRestaurantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestaurantAllUpdatablePropertiesEquals(Restaurant expected, Restaurant actual) {
        assertRestaurantUpdatableFieldsEquals(expected, actual);
        assertRestaurantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestaurantAutoGeneratedPropertiesEquals(Restaurant expected, Restaurant actual) {
        assertThat(expected)
            .as("Verify Restaurant auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestaurantUpdatableFieldsEquals(Restaurant expected, Restaurant actual) {
        assertThat(expected)
            .as("Verify Restaurant relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()))
            .satisfies(e -> assertThat(e.getRating()).as("check rating").isEqualTo(actual.getRating()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRestaurantUpdatableRelationshipsEquals(Restaurant expected, Restaurant actual) {}
}
